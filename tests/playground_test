run {
    WriteFile("ok", "OK")
    CopyFile("ok", "/tmp/test.txt")
}
===== [3:5] [Playground] access denied [/tmp/test.txt]
run {
    CopyFile("../ok", "test.txt")
}
===== [2:5] [Playground] access denied [../ok]
run str {
    str fname = "in.txt" 
    str out = "out.txt" 
    WriteFile(fname, "Initial line")
    CopyFile(fname, out)
    return ReadFile(out)
}
===== Initial line
run {
    ChMode("../../test", 0754)
}
===== [2:5] [Playground] access denied [../../test]
run int {
    CreateFile("test", false)
    ChMode("test", 0754)
    return FileMode("test")
}
===== 492
run str {
    CreateDir("test")
    ChDir("test")
    return BaseName(GetCurDir())
}
===== test
run {
    ChDir("/tmp")
}
===== [2:5] [Playground] access denied [/tmp]
run {
    ChDir("../temp")
}
===== [2:5] [Playground] access denied [../temp]
run str {
    str fname = "out.txt" 
    WriteFile(fname, "Initial line")
    AppendFile(fname, "this is a test message")
    return ReadFile(fname)
}
===== Initial linethis is a test message
run {
    AppendFile("out.txt", "this is a test message")
    str data = Repeat("this is a test message", 10000)
    for i in 1..700 {
        AppendFile("out.txt", data)
    }
}
===== [5:9] [Playground] file size limit reached [5 MB]
run {
    AppendFile("../out.txt", "this is a test message")
}
===== [2:5] [Playground] access denied [../out.txt]
run bool {
    return Dir(Dir(AbsPath("test"))) == TempDir()
}
===== true
run str {
    return AbsPath("../test")
}
===== [2:12] [Playground] access denied [../test]
run {
    OpenWith("firefox", "index.html")
}
===== [2:5] [Playground] starting any processes is disabled
run {
    Open("index.html")
}
===== [2:5] [Playground] starting any processes is disabled
run {
    Start("./myapp")
}
===== [13:3] [Playground] starting any processes is disabled
run {
    Run("./myapp")
}
===== [6:3] [Playground] starting any processes is disabled
run {
    SetEnv("MYPATH", true)
}
===== [2:5] [Playground] setting the environment variable is disabled
run str {
    str s = $PATH
    $MYPATH = "test"
    return s
}
===== [3:13] [Playground] setting the environment variable is disabled
run str {
    str s = $ echo "ooops"
    return s
}
===== [2:13] [Playground] starting any processes is disabled
run {
    $ echo "ooops"
}
===== [2:5] [Playground] starting any processes is disabled
run {
    for i in 1..2000 {
    }
}
===== [2:5] [Playground] maximum cycle count has been reached [1000]